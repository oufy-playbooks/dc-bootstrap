[ default ]
ca                      = {{ cert_authorities.root.name }}               # CA name
dir                     = {{ cert_authorities.root.path }}                     # Top dir
base_url                = http://pki.oufy.net/{{ cert_authorities.root.name }}    # CA base URL
aia_url                 = $base_url/$ca.cer     # CA certificate URL
crl_url                 = $base_url/$ca.crl     # CRL distribution point
name_opt                = multiline,-esc_msb,utf8 # Display UTF-8 characters

# CA certificate request

[ req ]
default_bits            = 4096                  # RSA key size
encrypt_key             = yes                   # Protect private key
default_md              = sha512                  # MD to use
utf8                    = yes                   # Input is UTF-8
string_mask             = utf8only              # Emit UTF-8 strings
prompt                  = no                    # Don't prompt for DN
distinguished_name      = ca_dn                 # DN section
req_extensions          = ca_reqext             # Desired extensions

[ ca_dn ]
countryName             = "{{ cert_authorities.root.country }}"
organizationName        = "{{ cert_authorities.root.organisation }}"
organizationalUnitName  = "{{ cert_authorities.root.ou_name }}"
commonName              = "{{ cert_authorities.root.organisation }} Root CA"
stateOrProvinceName     = "{{ cert_authorities.root.province_name }}"
localityName            = "{{ cert_authorities.root.city }}"
emailAddress            = "{{ cert_authorities.root.email }}"

[ ca_reqext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash

# CA operational settings

[ ca ]
default_ca              = {{ cert_authorities.root.name }}               # The default CA section

[ {{ cert_authorities.root.name }} ]
certificate             = $dir/certs/{{ cert_authorities.root.name }}.crt       # The CA cert
private_key             = $dir/private/{{ cert_authorities.root.name }}.pem # CA private key
new_certs_dir           = $dir/newcerts           # Certificate archive
serial                  = $dir/serial # Serial number file
crlnumber               = $dir/crlnumber # CRL number file
database                = $dir/index.txt # Index file
unique_subject          = yes                    # Require unique subject
default_days            = 3652                  # How long to certify for
default_md              = sha512                  # MD to use
policy                  = match_pol             # Default naming policy
email_in_dn             = no                    # Add email to cert DN
preserve                = no                    # Keep passed DN ordering
name_opt                = $name_opt             # Subject DN display options
cert_opt                = ca_default            # Certificate display options
copy_extensions         = none                  # Copy extensions from CSR
x509_extensions         = signing_ca_ext        # Default cert extensions
default_crl_days        = 365                   # How long before next CRL
crl_extensions          = crl_ext               # CRL extensions

[ match_pol ]
countryName             = match                 # Must match 'NO'
stateOrProvinceName     = optional              # Included if present
localityName            = optional              # Included if present
organizationName        = match                 # Must match 'Green AS'
organizationalUnitName  = optional              # Included if present
commonName              = supplied              # Must be present

[ any_pol ]
domainComponent         = optional
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = optional
emailAddress            = optional

# Extensions

[ root_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

[ signing_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:0
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always
authorityInfoAccess     = @issuer_info
crlDistributionPoints   = @crl_info

[ crl_ext ]
authorityKeyIdentifier  = keyid:always
authorityInfoAccess     = @issuer_info

[ issuer_info ]
caIssuers;URI.0         = $aia_url

[ crl_info ]
URI.0                   = $crl_url
